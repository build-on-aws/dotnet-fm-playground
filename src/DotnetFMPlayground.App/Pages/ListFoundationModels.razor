@page "/"
@page "/foundation-models"
@using Amazon.Bedrock.Model;
@using System.Text;
@using Amazon.Bedrock;
@inject AmazonBedrockClient BedrockClient

<MudDataGrid Items="foundationModels" Filterable="false" SortMode="@SortMode.None" Groupable="false">
    <Columns>
        <PropertyColumn Property="x => x.ProviderName" Title="Provider" />
        <PropertyColumn Property="x => x.ModelName" Title="Model Name" />
        <PropertyColumn Property="x => x.ModelId" Title="Model Id" />
        <PropertyColumn Property="x => x.ResponseStreamingSupported" Title="Streaming Supported" />
        <PropertyColumn Property="@(x => x.InputModalities == null ? "" : String.Join(", ", x.InputModalities))" Title="Input Modalities" />
        <PropertyColumn Property="@(x => x.OutputModalities == null ? "" : String.Join(", ", x.OutputModalities))" Title="Output Modalities" />
        <PropertyColumn Property="@(x => x.CustomizationsSupported == null ? "" : String.Join(", ", x.CustomizationsSupported))" Title="Customizations Supported" />
    </Columns>
</MudDataGrid>


@code {
    private IEnumerable<FoundationModelSummary> foundationModels;

    protected override async Task OnInitializedAsync()
    {
        foundationModels = (await BedrockClient.ListFoundationModelsAsync(new ListFoundationModelsRequest())).ModelSummaries;
        await base.OnInitializedAsync();
    }
}
